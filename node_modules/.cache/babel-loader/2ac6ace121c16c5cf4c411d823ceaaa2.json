{"ast":null,"code":"var _jsxFileName = \"/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/components/itemCount.js/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountButton = _ref => {\n  let {\n    onConfirm,\n    maxQuantity\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Disponible: \", maxQuantity, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onConfirm,\n      children: \"Agregar al carrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CountButton;\n\nconst CountInput = _ref2 => {\n  let {\n    onConfirm,\n    maxQuantity\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Disponible : \", maxQuantity, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: onConfirm,\n      value: \"Agregar al carrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = CountInput;\nconst type = '';\n\nconst Intercambiabilidad = () => {\n  const Count = type === 'button' ? CountButton : CountInput;\n\n  const handleConfirm = quantity => {\n    console.log(quantity);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Item Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      onConfirm: () => handleConfirm(10),\n      maxQuantity: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Intercambiabilidad;\nexport default Intercambiabilidad;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CountButton\");\n$RefreshReg$(_c2, \"CountInput\");\n$RefreshReg$(_c3, \"Intercambiabilidad\");","map":{"version":3,"names":["CountButton","onConfirm","maxQuantity","CountInput","type","Intercambiabilidad","Count","handleConfirm","quantity","console","log"],"sources":["/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/components/itemCount.js/index.js"],"sourcesContent":["const CountButton = ({ onConfirm, maxQuantity }) => {\n    return (\n        <>\n            Disponible: {maxQuantity}\n            <button onClick={onConfirm}>Agregar al carrito</button>\n        </>\n    )\n}\n\nconst CountInput = ({ onConfirm, maxQuantity }) => {\n    return (\n        <>\n            Disponible : {maxQuantity}\n            <input type='button' onClick={onConfirm} value='Agregar al carrito' />\n        </>\n    )\n}\n\nconst type = ''\nconst Intercambiabilidad = () => {\n    const Count = type === 'button' ? CountButton : CountInput;\n\n    const handleConfirm = (quantity) => {\n        console.log(quantity)\n    }\n\n    return (\n        <>\n            <h3>Item Description</h3>\n            <Count onConfirm={() => handleConfirm(10)} maxQuantity={10} />\n        </>\n    )\n}\n\nexport default Intercambiabilidad;"],"mappings":";;;;AAAA,MAAMA,WAAW,GAAG,QAAgC;EAAA,IAA/B;IAAEC,SAAF;IAAaC;EAAb,CAA+B;EAChD,oBACI;IAAA,2BACiBA,WADjB,eAEI;MAAQ,OAAO,EAAED,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAPD;;KAAMD,W;;AASN,MAAMG,UAAU,GAAG,SAAgC;EAAA,IAA/B;IAAEF,SAAF;IAAaC;EAAb,CAA+B;EAC/C,oBACI;IAAA,4BACkBA,WADlB,eAEI;MAAO,IAAI,EAAC,QAAZ;MAAqB,OAAO,EAAED,SAA9B;MAAyC,KAAK,EAAC;IAA/C;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAPD;;MAAME,U;AASN,MAAMC,IAAI,GAAG,EAAb;;AACA,MAAMC,kBAAkB,GAAG,MAAM;EAC7B,MAAMC,KAAK,GAAGF,IAAI,KAAK,QAAT,GAAoBJ,WAApB,GAAkCG,UAAhD;;EAEA,MAAMI,aAAa,GAAIC,QAAD,IAAc;IAChCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACH,CAFD;;EAIA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAO,SAAS,EAAE,MAAMD,aAAa,CAAC,EAAD,CAArC;MAA2C,WAAW,EAAE;IAAxD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAbD;;MAAMF,kB;AAeN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}