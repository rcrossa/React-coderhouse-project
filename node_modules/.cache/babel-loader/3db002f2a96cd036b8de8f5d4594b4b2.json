{"ast":null,"code":"var _jsxFileName = \"/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/contexts/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({});\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  const addItem = (product, quantity) => {\n    if (!isInCart(product.id)) {\n      const item = { ...product,\n        quantity\n      };\n      setCart([...cart, item]);\n    } else {\n      // actualizar quantity\n      // buscamos el item en el carrito, en el array, su ubicacion para despues poder actualizar este item\n      const itemIndex = cart.findIndex(item => item.id === parseInt(product.id)); // creamos un borrador del item para poder modificarlo y evidar la modificacion del estado de react\n\n      const itemDraft = { ...cart[itemIndex]\n      }; // actualizamos la quantity en el borrador\n\n      itemDraft.quantity = itemDraft.quantity + quantity; // creamos un borrador del carrito para poder actualizar el item\n\n      const cartDraft = [...cart]; // actualizamos el carrito borrador, SIN TOCAR EL ESTADO REACT\n\n      cartDraft[itemIndex] = itemDraft; // cart[itemIndex] = itemDraft; PROHIBIDO, ya que modifica el estado de react\n\n      setCart(cartDraft); // VERSION CORTA, pero peligrosa, tocamos el estado react, mutacion\n      // const item = cart.find((item) => item.id === parseInt(id));\n      // item.quantity = item.quantity + quantity;\n      // setCart([...cart]);\n    }\n  };\n\n  let location = useLocation();\n\n  const removeItem = itemId => {\n    const cartDraft = cart.filter(item => item.id !== itemId);\n    setCart(cartDraft);\n  };\n\n  const clear = () => {\n    setCart([]);\n  };\n\n  const isInCart = id => cart.some(item => item.id === parseInt(id));\n\n  const total = cart.reduce((count, item) => count + item.price * item.quantity, 0); // let total = 0;\n  // cart.forEach((item) => {\n  //   total += item.price * item.quantity\n  // });\n\n  const totalQuantity = cart.reduce((count, item) => count + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addItem,\n      removeItem,\n      clear,\n      isInCart,\n      total,\n      totalQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"wCzVz3Ub1A+CGU9IYXkWvnk0jdw=\", false, function () {\n  return [useLocation];\n});\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useLocation","CartContext","CartProvider","children","cart","setCart","addItem","product","quantity","isInCart","id","item","itemIndex","findIndex","parseInt","itemDraft","cartDraft","location","removeItem","itemId","filter","clear","some","total","reduce","count","price","totalQuantity"],"sources":["/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/contexts/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst CartContext = createContext({});\n\nexport default CartContext;\n\nexport const CartProvider = ({ children }) => {\n    const [cart, setCart] = useState([]);\n\n    const addItem = (product, quantity) => {\n        if (!isInCart(product.id)) {\n            const item = {\n                ...product,\n                quantity\n            };\n            setCart([...cart, item]);\n        } else {\n            // actualizar quantity\n            // buscamos el item en el carrito, en el array, su ubicacion para despues poder actualizar este item\n            const itemIndex = cart.findIndex((item) => item.id === parseInt(product.id));\n            // creamos un borrador del item para poder modificarlo y evidar la modificacion del estado de react\n            const itemDraft = { ...cart[itemIndex] };\n            // actualizamos la quantity en el borrador\n            itemDraft.quantity = itemDraft.quantity + quantity;\n            // creamos un borrador del carrito para poder actualizar el item\n            const cartDraft = [...cart];\n            // actualizamos el carrito borrador, SIN TOCAR EL ESTADO REACT\n            cartDraft[itemIndex] = itemDraft;\n            // cart[itemIndex] = itemDraft; PROHIBIDO, ya que modifica el estado de react\n            setCart(cartDraft);\n\n            // VERSION CORTA, pero peligrosa, tocamos el estado react, mutacion\n            // const item = cart.find((item) => item.id === parseInt(id));\n            // item.quantity = item.quantity + quantity;\n            // setCart([...cart]);\n        }\n    }\n    let location = useLocation();\n    const removeItem = (itemId) => {\n        const cartDraft = cart.filter((item) => item.id !== itemId);\n        setCart(cartDraft);\n    }\n\n    const clear = () => {\n        setCart([]);\n    }\n\n    const isInCart = (id) => cart.some((item) => item.id === parseInt(id));\n\n    const total = cart.reduce((count, item) => count + (item.price * item.quantity), 0);\n\n\n    // let total = 0;\n    // cart.forEach((item) => {\n    //   total += item.price * item.quantity\n    // });\n\n    const totalQuantity = cart.reduce((count, item) => count + item.quantity, 0);\n    return (\n        <CartContext.Provider value={{ cart, addItem, removeItem, clear, isInCart, total, totalQuantity }}>\n            {children}\n        </CartContext.Provider>\n    )\n};"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AACA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEA,eAAeG,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC1C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMO,OAAO,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;IACnC,IAAI,CAACC,QAAQ,CAACF,OAAO,CAACG,EAAT,CAAb,EAA2B;MACvB,MAAMC,IAAI,GAAG,EACT,GAAGJ,OADM;QAETC;MAFS,CAAb;MAIAH,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUO,IAAV,CAAD,CAAP;IACH,CAND,MAMO;MACH;MACA;MACA,MAAMC,SAAS,GAAGR,IAAI,CAACS,SAAL,CAAgBF,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYI,QAAQ,CAACP,OAAO,CAACG,EAAT,CAA7C,CAAlB,CAHG,CAIH;;MACA,MAAMK,SAAS,GAAG,EAAE,GAAGX,IAAI,CAACQ,SAAD;MAAT,CAAlB,CALG,CAMH;;MACAG,SAAS,CAACP,QAAV,GAAqBO,SAAS,CAACP,QAAV,GAAqBA,QAA1C,CAPG,CAQH;;MACA,MAAMQ,SAAS,GAAG,CAAC,GAAGZ,IAAJ,CAAlB,CATG,CAUH;;MACAY,SAAS,CAACJ,SAAD,CAAT,GAAuBG,SAAvB,CAXG,CAYH;;MACAV,OAAO,CAACW,SAAD,CAAP,CAbG,CAeH;MACA;MACA;MACA;IACH;EACJ,CA3BD;;EA4BA,IAAIC,QAAQ,GAAGjB,WAAW,EAA1B;;EACA,MAAMkB,UAAU,GAAIC,MAAD,IAAY;IAC3B,MAAMH,SAAS,GAAGZ,IAAI,CAACgB,MAAL,CAAaT,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYS,MAAlC,CAAlB;IACAd,OAAO,CAACW,SAAD,CAAP;EACH,CAHD;;EAKA,MAAMK,KAAK,GAAG,MAAM;IAChBhB,OAAO,CAAC,EAAD,CAAP;EACH,CAFD;;EAIA,MAAMI,QAAQ,GAAIC,EAAD,IAAQN,IAAI,CAACkB,IAAL,CAAWX,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYI,QAAQ,CAACJ,EAAD,CAAxC,CAAzB;;EAEA,MAAMa,KAAK,GAAGnB,IAAI,CAACoB,MAAL,CAAY,CAACC,KAAD,EAAQd,IAAR,KAAiBc,KAAK,GAAId,IAAI,CAACe,KAAL,GAAaf,IAAI,CAACH,QAAxD,EAAmE,CAAnE,CAAd,CA3C0C,CA8C1C;EACA;EACA;EACA;;EAEA,MAAMmB,aAAa,GAAGvB,IAAI,CAACoB,MAAL,CAAY,CAACC,KAAD,EAAQd,IAAR,KAAiBc,KAAK,GAAGd,IAAI,CAACH,QAA1C,EAAoD,CAApD,CAAtB;EACA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEJ,IAAF;MAAQE,OAAR;MAAiBY,UAAjB;MAA6BG,KAA7B;MAAoCZ,QAApC;MAA8Cc,KAA9C;MAAqDI;IAArD,CAA7B;IAAA,UACKxB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAzDM;;GAAMD,Y;UA+BMF,W;;;KA/BNE,Y"},"metadata":{},"sourceType":"module"}