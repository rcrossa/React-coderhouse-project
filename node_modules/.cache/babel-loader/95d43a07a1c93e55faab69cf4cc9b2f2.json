{"ast":null,"code":"var _jsxFileName = \"/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/components/pure/card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '../../models/card';\nimport DemoCard from 'react-bootstrap/Card';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardComponent = _ref => {\n  _s();\n\n  let {\n    card\n  } = _ref;\n  const [count, setCount] = useState(0);\n\n  const handleClickADD = () => {\n    setCount(count + 1);\n    card.quantity = count;\n  };\n\n  const handleClickLESS = () => {\n    if (count > 0) {\n      setCount(count - 1);\n    }\n\n    card.quantity = count;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DemoCard, {\n    className: \"democard\",\n    children: [/*#__PURE__*/_jsxDEV(DemoCard.Img, {\n      variant: \"top\",\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DemoCard.Body, {\n      className: \"democardbody\",\n      children: [/*#__PURE__*/_jsxDEV(DemoCard.Title, {\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DemoCard.Text, {\n        children: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DemoCard.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClickLESS,\n          className: \"btn_count_less\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), card.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClickADD,\n          className: \"btn_count_add\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_add\",\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardComponent, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = CardComponent;\nCardComponent.propTypes = {\n  card: PropTypes.instanceOf(Card)\n};\nexport default CardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"names":["React","useState","PropTypes","Card","DemoCard","CardComponent","card","count","setCount","handleClickADD","quantity","handleClickLESS","image","name","description","propTypes","instanceOf"],"sources":["/Users/robertorossa/Desktop/Cursos/coderHouse/react-coderhouse-project/src/components/pure/card.jsx"],"sourcesContent":["\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '../../models/card';\nimport DemoCard from 'react-bootstrap/Card';\nimport './style.css'\n\nconst CardComponent = ({ card }) => {\n    const [count, setCount] = useState(0);\n    const handleClickADD = () => {\n        setCount(count + 1);\n        card.quantity = count;\n    }\n    const handleClickLESS = () => {\n        if (count > 0) {\n            setCount(count - 1);\n        }\n        card.quantity = count;\n    }\n    return (\n        <DemoCard className='democard' >\n            <DemoCard.Img variant=\"top\" src={card.image} />\n            <DemoCard.Body className='democardbody'>\n                <DemoCard.Title>{card.name}</DemoCard.Title>\n                <DemoCard.Text>\n                    {card.description}\n                </DemoCard.Text>\n                <DemoCard.Text>\n                    <button onClick={handleClickLESS} className='btn_count_less'>-</button>\n                    {card.quantity}\n                    <button onClick={handleClickADD} className='btn_count_add'>+</button>\n                </DemoCard.Text>\n                <button className='btn_add' >Buy</button>\n            </DemoCard.Body>\n        </DemoCard>\n\n    );\n};\n\n\nCardComponent.propTypes = {\n    card: PropTypes.instanceOf(Card)\n};\n\n\nexport default CardComponent;\n"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,aAAa,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAChC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;;EACA,MAAMQ,cAAc,GAAG,MAAM;IACzBD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACAD,IAAI,CAACI,QAAL,GAAgBH,KAAhB;EACH,CAHD;;EAIA,MAAMI,eAAe,GAAG,MAAM;IAC1B,IAAIJ,KAAK,GAAG,CAAZ,EAAe;MACXC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACH;;IACDD,IAAI,CAACI,QAAL,GAAgBH,KAAhB;EACH,CALD;;EAMA,oBACI,QAAC,QAAD;IAAU,SAAS,EAAC,UAApB;IAAA,wBACI,QAAC,QAAD,CAAU,GAAV;MAAc,OAAO,EAAC,KAAtB;MAA4B,GAAG,EAAED,IAAI,CAACM;IAAtC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD,CAAU,IAAV;MAAe,SAAS,EAAC,cAAzB;MAAA,wBACI,QAAC,QAAD,CAAU,KAAV;QAAA,UAAiBN,IAAI,CAACO;MAAtB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,QAAD,CAAU,IAAV;QAAA,UACKP,IAAI,CAACQ;MADV;QAAA;QAAA;QAAA;MAAA,QAFJ,eAKI,QAAC,QAAD,CAAU,IAAV;QAAA,wBACI;UAAQ,OAAO,EAAEH,eAAjB;UAAkC,SAAS,EAAC,gBAA5C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKL,IAAI,CAACI,QAFV,eAGI;UAAQ,OAAO,EAAED,cAAjB;UAAiC,SAAS,EAAC,eAA3C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAUI;QAAQ,SAAS,EAAC,SAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CA9BD;;GAAMJ,a;;KAAAA,a;AAiCNA,aAAa,CAACU,SAAd,GAA0B;EACtBT,IAAI,EAAEJ,SAAS,CAACc,UAAV,CAAqBb,IAArB;AADgB,CAA1B;AAKA,eAAeE,aAAf"},"metadata":{},"sourceType":"module"}